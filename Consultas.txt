--1. Devuelve un listado con el código de oficina y la ciudad donde hay oficinas.

SELECT codigo_oficina, ciudad FROM oficina;

--2. Devuelve un listado con la ciudad y el teléfono de las oficinas de España.

SELECT ciudad, telefono FROM oficina WHERE pais = 'España';


--3.Devuelve un listado con el nombre, apellidos y email de los empleados cuyo jefe tiene un código de jefe igual a 7

SELECT nombre, apellido1, apellido2, email
FROM empleado
WHERE codigo_jefe = 7;


--4. Devuelve el nombre del puesto, nombre, apellidos y email del jefe de la empresa.

SELECT puesto, nombre, apellido1, apellido2, email
FROM empleado
WHERE codigo_jefe IS NULL;


--5. Devuelve un listado con el nombre, apellidos y puesto de aquellos empleados que no sean representantes de ventas.

SELECT nombre, apellido1, apellido2, puesto
FROM empleado
WHERE codigo_empleado NOT IN (
  SELECT codigo_empleado_rep_ventas
  FROM cliente
);


--6. Devuelve un listado con el nombre de los todos los clientes españoles.

SELECT nombre_cliente
FROM cliente
WHERE pais = 'España';


--7. Devuelve un listado con los distintos estados por los que puede pasar un pedido.

SELECT DISTINCT estado FROM pedido;


--8. Devuelve un listado con el código de cliente de aquellos clientes que realizaron algún pago en 2008. Tenga en cuenta que deberá eliminar aquellos códigos de cliente que aparezcan repetidos. Resuelva la consulta:

--	Utilizando la función YEAR de MySQL.

SELECT DISTINCT codigo_cliente
FROM cliente
WHERE codigo_cliente IN (
  SELECT codigo_cliente
  FROM pedido
  WHERE YEAR(fecha_pedido) = 2008
)
		
--	Utilizando la función DATE_FORMAT de MySQL.

SELECT DISTINCT codigo_cliente
FROM cliente
WHERE codigo_cliente IN (
  SELECT codigo_cliente
  FROM pedido
  WHERE DATE_FORMAT(fecha_pedido, '%Y') = '2008'
)

--	Sin utilizar ninguna de las funciones anteriores.

SELECT DISTINCT codigo_cliente
FROM cliente
WHERE codigo_cliente IN (
  SELECT codigo_cliente
  FROM pedido
  WHERE fecha_pedido BETWEEN '2008-01-01' AND '2008-12-31'
)


--9. Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de entrega de los pedidos que no han sido entregados a tiempo.

SELECT pedido.codigo_pedido, pedido.codigo_cliente, pedido.fecha_esperada, pedido.fecha_entrega
FROM pedido
WHERE fecha_entrega > fecha_esperada;


--10. Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de entrega de los pedidos cuya fecha de entrega ha sido al menos dos días antes de la fecha esperada.
 	
--	Utilizando la función ADDDATE de MySQL.

SELECT codigo_pedido, codigo_cliente, fecha_esperada, fecha_entrega
FROM pedido
WHERE fecha_entrega <= ADDDATE(fecha_esperada, INTERVAL -2 DAY);


--	Utilizando la función DATEDIFF de MySQL.

SELECT codigo_pedido, codigo_cliente, fecha_esperada, fecha_entrega
FROM pedido
WHERE DATEDIFF(fecha_entrega, fecha_esperada) <= -2;

--	¿Sería posible resolver esta consulta utilizando el operador de suma + o resta -?

-- Sí, sería posible resolver esta consulta utilizando el operador de suma o resta, pero se requiere un poco más de lógica y cálculo.

	SELECT codigo_pedido, codigo_cliente, fecha_esperada, fecha_entrega
FROM pedido
WHERE fecha_entrega <= fecha_esperada - INTERVAL 2 DAY;


--11. Devuelve un listado de todos los pedidos que fueron rechazados en 2009.

SELECT * 
FROM pedido
WHERE estado = 'Rechazado' 
  AND fecha_pedido BETWEEN '2009-01-01' AND '2009-12-31'


--12. Devuelve un listado de todos los pedidos que han sido entregados en el mes de enero de cualquier año.

SELECT *
FROM pedido
WHERE extract(month from fecha_entrega) = 1 AND extract(year from fecha_entrega) = any year;


--13. Devuelve un listado con todos los pagos que se realizaron en el año 2008 mediante Paypal. Ordene el resultado de mayor a menor.

SELECT *
FROM pago
WHERE forma_pago = 'Paypal' AND YEAR(fecha_pago) = 2008
ORDER BY fecha_pago DESC;


--14. Devuelve un listado con todas las formas de pago que aparecen en la tabla pago. Tenga en cuenta que no deben aparecer formas de pago repetidas.

SELECT DISTINCT forma_pago
FROM pago;

--15. Devuelve un listado con todos los productos que pertenecen a la gama Ornamentales y que tienen más de 100 unidades en stock. El listado deberá estar ordenado por su precio de venta, mostrando en primer lugar los de mayor precio.

SELECT nombre, precio_venta
FROM producto
WHERE gama = 'Ornamentales' AND cantidad_en_stock > 100
ORDER BY precio_venta DESC;


--16. Devuelve un listado con todos los clientes que sean de la ciudad de Madrid y cuyo representante de ventas tenga el código de empleado 11 o 30

SELECT cliente.nombre_cliente, cliente.ciudad
FROM cliente
JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado
WHERE cliente.ciudad = 'Madrid' AND (empleado.codigo_empleado = 11 OR empleado.codigo_empleado = 30);

--------------------------------------------------------

--Consultas multitabla (Composición interna)

--17. Obtén un listado con el nombre de cada cliente y el nombre y apellido de su representante de ventas.

SELECT cliente.nombre_cliente, empleado.nombre, empleado.apellido1
FROM cliente
INNER JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado;


--18. Muestra el nombre de los clientes que hayan realizado pagos junto con el nombre de sus representantes de ventas.

SELECT cliente.nombre_cliente, empleado.nombre
FROM cliente
INNER JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado;


--19. Muestra el nombre de los clientes que no hayan realizado pagos junto con el nombre de sus representantes de ventas.

SELECT c.nombre_cliente, e.nombre || ' ' || e.apellido1 || ' ' || e.apellido2 AS nombre_representante
FROM cliente c
LEFT JOIN pedido p ON c.codigo_cliente = p.codigo_cliente
LEFT JOIN empleado e ON c.codigo_empleado_rep_ventas = e.codigo_empleado
WHERE p.codigo_pedido IS NULL;


--20. Devuelve el nombre de los clientes que han hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT cliente.nombre_cliente, empleado.nombre, empleado.apellido1, oficina.ciudad
FROM cliente
INNER JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado
INNER JOIN oficina ON empleado.codigo_oficina = oficina.codigo_oficina;


--21. Devuelve el nombre de los clientes que no hayan hecho pagos y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT cliente.nombre_cliente, empleado.nombre, empleado.apellido1, oficina.ciudad
FROM cliente
INNER JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado
INNER JOIN oficina ON empleado.codigo_oficina = oficina.codigo_oficina
WHERE cliente.codigo_cliente NOT IN (SELECT codigo_cliente FROM pagos);


--22. Lista la dirección de las oficinas que tengan clientes en Fuenlabrada.

SELECT oficina.linea_direccion1, oficina.linea_direccion2
FROM oficina
INNER JOIN empleado ON oficina.codigo_oficina = empleado.codigo_oficina
INNER JOIN cliente ON empleado.codigo_empleado = cliente.codigo_empleado_rep_ventas
WHERE cliente.ciudad = 'Fuenlabrada';


--23. Devuelve el nombre de los clientes y el nombre de sus representantes junto con la ciudad de la oficina a la que pertenece el representante.

SELECT cliente.nombre_cliente, 
       empleado.nombre || ' ' || empleado.apellido1 AS nombre_representante, 
       oficina.ciudad
FROM cliente
INNER JOIN empleado ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado
INNER JOIN oficina ON empleado.codigo_oficina = oficina.codigo_oficina;


--24. Devuelve un listado con el nombre de los empleados junto con el nombre de sus jefes.

SELECT e1.nombre || ' ' || e1.apellido1 AS empleado, e2.nombre || ' ' || e2.apellido1 AS jefe
FROM empleado e1
INNER JOIN empleado e2 ON e1.codigo_jefe = e2.codigo_empleado;


--25. Devuelve un listado que muestre el nombre de cada empleados, el nombre de su jefe y el nombre del jefe de sus jefe.

SELECT e1.nombre AS empleado, e2.nombre AS jefe, e3.nombre AS jefe_de_jefe
FROM empleado e1
  INNER JOIN empleado e2 ON e1.codigo_jefe = e2.codigo_empleado
  INNER JOIN empleado e3 ON e2.codigo_jefe = e3.codigo_empleado;


--26. Devuelve el nombre de los clientes a los que no se les ha entregado a tiempo un pedido.

SELECT nombre_cliente
FROM cliente
INNER JOIN pedido
ON cliente.codigo_cliente = pedido.codigo_cliente
WHERE fecha_entrega > fecha_esperada;


--27. Devuelve un listado de las diferentes gamas de producto que ha comprado cada cliente.

SELECT cliente.nombre_cliente, gama_producto.gama
FROM cliente
INNER JOIN pedido ON cliente.codigo_cliente = pedido.codigo_cliente
INNER JOIN detalle_pedido ON pedido.codigo_pedido = detalle_pedido.codigo_pedido
INNER JOIN producto ON detalle_pedido.codigo_producto = producto.codigo_producto
INNER JOIN gama_producto ON producto.gama = gama_producto.gama

--------------------------------------------------


--Consultas multitabla (Composición externa)

--28. Devuelve un listado que muestre solamente los clientes que no han realizado ningún pago.

SELECT cliente.codigo_cliente, cliente.nombre_cliente
FROM cliente
LEFT JOIN pago ON cliente.codigo_cliente = pago.codigo_cliente
WHERE pago.codigo_cliente IS NULL;


--29. Devuelve un listado que muestre solamente los clientes que no han realizado ningún pedido.

SELECT c.codigo_cliente, c.nombre_cliente
FROM cliente c
LEFT JOIN pedido p ON c.codigo_cliente = p.codigo_cliente
WHERE p.codigo_pedido IS NULL;


--30. Devuelve un listado que muestre los clientes que no han realizado ningún pago ni pedido.

SELECT c.codigo_cliente, c.nombre_cliente
FROM cliente c
LEFT JOIN pedido p ON c.codigo_cliente = p.codigo_cliente
LEFT JOIN pago pg ON c.codigo_cliente = pg.codigo_cliente
WHERE p.codigo_pedido IS NULL AND pg.codigo_pago IS NULL;


--31. Devuelve un listado que muestre solamente los empleados que no tienen una oficina asociada.

SELECT empleado.codigo_empleado, empleado.nombre, empleado.apellido1, empleado.apellido2
FROM empleado
LEFT JOIN oficina ON empleado.codigo_oficina = oficina.codigo_oficina
WHERE oficina.codigo_oficina IS NULL;


--32. Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado.

SELECT empleado.codigo_empleado, empleado.nombre, empleado.apellido1, empleado.apellido2
FROM empleado
LEFT JOIN cliente
ON empleado.codigo_empleado = cliente.codigo_empleado_rep_ventas
WHERE cliente.codigo_cliente IS NULL;


--33. Devuelve un listado que muestre solamente los empleados que no tienen un cliente asociado junto con los datos de la oficina donde trabajan.

SELECT e.codigo_empleado, e.nombre, e.apellido1, e.apellido2, o,codigo_oficina, o.codigo_postal, o.linea_direccion1
FROM empleado e
INNER JOIN oficina o ON e.codigo_oficina = o.codigo_oficina
LEFT JOIN cliente c ON e.codigo_empleado = c.codigo_empleado_rep_ventas
WHERE c.codigo_cliente IS NULL;


--34. Devuelve un listado que muestre los empleados que no tienen una oficina asociada ni un cliente asociado.

SELECT empleado.codigo_empleado, empleado.nombre, empleado.apellido1, empleado.apellido2
FROM empleado
LEFT JOIN oficina
ON empleado.codigo_oficina = oficina.codigo_oficina
LEFT JOIN cliente
ON empleado.codigo_empleado = cliente.codigo_empleado_rep_ventas
WHERE oficina.codigo_oficina IS NULL
AND cliente.codigo_cliente IS NULL;


--35. Devuelve un listado de los productos que nunca han aparecido en un pedido.

SELECT producto.codigo_producto, producto.nombre
FROM producto
LEFT JOIN detalle_pedido
ON producto.codigo_producto = detalle_pedido.codigo_producto
WHERE detalle_pedido.codigo_pedido IS NULL;


--36. Devuelve un listado de los productos que nunca han aparecido en un pedido. El resultado debe mostrar el nombre, la descripción y la imagen del producto.

SELECT producto.nombre, producto.descripcion, producto.imagen
FROM producto
LEFT JOIN pedido
ON producto.codigo_producto = pedido.codigo_producto
WHERE pedido.codigo_pedido IS NULL;

--37. Devuelve las oficinas donde no trabajan ninguno de los empleados que hayan sido los representantes de ventas de algún cliente que haya realizado la compra de algún producto de la gama Frutales.

SELECT oficina.*
FROM oficina
LEFT JOIN empleado
ON oficina.codigo_oficina = empleado.codigo_oficina
LEFT JOIN cliente
ON empleado.codigo_empleado = cliente.codigo_empleado_rep_ventas
LEFT JOIN pedido
ON cliente.codigo_cliente = pedido.codigo_cliente
LEFT JOIN producto
ON pedido.codigo_pedido = producto.codigo_producto
WHERE producto.gama = 'Frutales' OR producto.gama IS NULL;


--38. Devuelve un listado con los clientes que han realizado algún pedido pero no han realizado ningún pago.

SELECT cliente.codigo_cliente, cliente.nombre_cliente
FROM cliente
LEFT JOIN pedido
ON cliente.codigo_cliente = pedido.codigo_cliente
LEFT JOIN pago
ON pedido.codigo_pedido = pago.codigo_pedido
WHERE pago.codigo_pago IS NULL;


-39. Devuelve un listado con los datos de los empleados que no tienen clientes asociados y el nombre de su jefe asociado.

SELECT empleado.codigo_empleado, empleado.nombre, empleado.apellido1, empleado.apellido2, jefe.nombre as nombre_jefe
FROM empleado
LEFT JOIN cliente
ON empleado.codigo_empleado = cliente.codigo_empleado_rep_ventas
LEFT JOIN empleado as jefe
ON empleado.codigo_jefe = jefe.codigo_empleado
WHERE cliente.codigo_cliente IS NULL;

